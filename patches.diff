--- libspiralcore-1.0.0rc1/SConstruct.orig	2008-06-19 20:47:14.748765486 -0300
+++ libspiralcore-1.0.0rc1/SConstruct	2008-06-19 20:47:14.748765486 -0300
@@ -1,9 +1,14 @@
 Target       = "libspiralcore.so"
-Install   	 = "/usr/local/lib"
-IncInstall	 = "/usr/local/include/spiralcore"
-LibPaths     = Split("/usr/local/lib")
-IncludePaths = Split("./include /usr/local/include")
-	  
+prefix       = "/usr/local"
+if ARGUMENTS.get('prefix', 0):
+    prefix = ARGUMENTS.get('prefix', 0)
+Install   	 = prefix+"/lib"
+IncInstall	 = prefix+"/include/spiralcore"
+LibPaths     = Split(prefix+"/lib")
+IncludePaths = Split("./include "+prefix+"/include")
+
+
+
 Libs = Split("sndfile jack lo m")
 
 Source = Split("src/ChannelHandler.cpp \
--- libspiralcore-1.0.0rc1/include/JackClient.h.orig	2008-06-19 20:47:14.145431926 -0300
+++ libspiralcore-1.0.0rc1/include/JackClient.h	2008-06-19 20:47:14.145431926 -0300
@@ -67,7 +67,7 @@
 	class JackPort
 	{		
 		public:
-		JackPort::JackPort() :
+		JackPort() :
 			Connected(false),Buf(NULL),Port(NULL) {}
 		
 		string         Name;
--- libspiralcore-1.0.0rc1/include/Sample.h.orig	2008-06-19 20:47:14.145431926 -0300
+++ libspiralcore-1.0.0rc1/include/Sample.h	2008-06-19 20:47:14.145431926 -0300
@@ -70,7 +70,7 @@
 	void Shrink(int Length);
 	void CropTo(int NewLength);
 
-	inline AudioType &Sample::operator[](unsigned int i) const
+	inline AudioType &operator[](unsigned int i) const
 	{		
 		#ifdef DEBUG
 			assert(i>=0 && i<m_Length);
@@ -78,14 +78,14 @@
 		return m_Data[i];
 	}
 	
-	inline AudioType &Sample::operator[](int i) const
+	inline AudioType &operator[](int i) const
 	{
 		//return (*this)[(int)i];
 		return m_Data[i];
 	}
 	
 	// Linear interpolated
-	inline AudioType Sample::operator[](float i) const
+	inline AudioType operator[](float i) const
 	{		
 		int ii=(int)i;
 		
@@ -99,7 +99,7 @@
 	}
 
 
-	inline void Sample::Set(int i, AudioType v)
+	inline void Set(int i, AudioType v)
 	{	
 		#ifdef DEBUG
 			assert(i>=0 && i<m_Length);
@@ -107,7 +107,7 @@
 		m_Data[i]=v;
 	}	
 	
-	inline Sample &Sample::operator=(const Sample &rhs)
+	inline Sample &operator=(const Sample &rhs)
 	{
 		if (GetLength()!=rhs.GetLength()) Allocate(rhs.GetLength());		
 		memcpy(m_Data,rhs.GetBuffer(),GetLengthInBytes());
--- libspiralcore-1.0.0rc1/src/ChannelHandler.cpp.orig	2008-06-19 20:47:14.639396206 -0300
+++ libspiralcore-1.0.0rc1/src/ChannelHandler.cpp	2008-06-19 20:47:14.639396206 -0300
@@ -16,6 +16,8 @@
 
 #include "ChannelHandler.h"
 #include <unistd.h>
+#include <cstdlib>
+#include <cstring>
 
 using namespace std;
 using namespace spiralcore;
--- libspiralcore-1.0.0rc1/src/JackClient.cpp.orig	2008-06-19 20:47:14.639396206 -0300
+++ libspiralcore-1.0.0rc1/src/JackClient.cpp	2008-06-19 20:47:14.639396206 -0300
@@ -16,6 +16,7 @@
 
 #include <stdio.h>
 #include <limits.h>
+#include <cstring>
 
 #include "JackClient.h"
 #include "NETypes.h"
--- libspiralcore-1.0.0rc1/src/Tuna.cpp.orig	2008-06-19 20:47:14.663394252 -0300
+++ libspiralcore-1.0.0rc1/src/Tuna.cpp	2008-06-19 20:47:14.663394252 -0300
@@ -18,6 +18,7 @@
 #include <math.h>
 #include <float.h>
 #include <iostream>
+#include <cstdlib>
 #include "Tuna.h"
 
 static const float MAX_LUT_FREQ = 24000.0; // (maximum audible freq (apparently))
--- libspiralcore-1.0.0rc1/src/OSCServer.cpp.orig	2008-06-19 20:47:14.663394252 -0300
+++ libspiralcore-1.0.0rc1/src/OSCServer.cpp	2008-06-19 20:47:14.663394252 -0300
@@ -18,6 +18,7 @@
 #include <cstdlib>
 #include <unistd.h>
 #include <iostream>
+#include <cstring>
 
 #include "OSCServer.h"
 
